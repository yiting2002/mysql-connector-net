namespace MySql.Data {
    internal class ResourcesX {
        public const string InvalidCollationId = @"Collation with id '{0}' not found.";
        public const string InvalidConnectionData = @"Connection Data is incorrect.";
        public const string InvalidConnectionStringAttribute = @"'{0}' is not a valid connection string attribute.";
        public const string InvalidConnectionString = @"The connection string is invalid.";
        public const string InvalidDecimalFormat = @"Decimal (BCD) format is invalid.";
        public const string InvalidNameIndex = @"{0} is not a valid column name in the row.";
        public const string InvalidRowIndex = @"{0} is not a valid index for the row.";
        public const string KeywordNotSupported = @"Keyword not supported.";
        public const string MoreThanOneDocumentId = @"More than one document id was generated.  Please use the DocumentIds property instead.";
        public const string NoDataAtIndex = @"There is no data at index {0}";
        public const string NoMoreData = @"No more data in resultset.";
        public const string NoPlaceholders = @"No placeholders.";
        public const string PathNotFound = @"Path not found '{0}'.";
        public const string ThrowingAwayResults = @"The process of closing the resultset and resulted in results being lost.";
        public const string UnableToConnect = @"Unable to connect to any specified host.";
        public const string UnableToDecodeDataValue = @"Unable to read or decode data value.";
        public const string UnexpectedEndOfPacketFound = @"Unexpected end of packet found while reading data values";
        public const string UnknownPlaceholder = @"Unknown placeholder :{0}";
        public const string ValueNotCorrectType = @"Value '{0}' is not of the correct type.";
        public const string NoObjectFound = @"Object '{0}' not found";
        public const string InvalidUriData = @"Invalid Uri ";
        public const string InvalidUriQuery = @"Invalid uri query value";
        public const string JsonUriOrHost = @"Json configuration must contain 'uri' or 'host' but not both.";
        public const string NoHost = @"No 'host' has been specified.";
        public const string AppdataNotDefined = @"Appdata path is not defined.";
        public const string ProgramDataNotDefined = @"ProgramData path is not defined.";
        public const string KeywordNotFound = @"Keyword '{0}' not found.";
        public const string PriorityForAllOrNoHosts = @"You must either assign no priority to any of the hosts or give a priority for every host.";
        public const string PriorityOutOfLimits = @"The priority must be between 0 and 100.";
        public const string PortNotSupported = @"Providing a port number as part of the host address isn't supported when using connection strings in basic format or anonymous objects. Use URI format instead.";
        public const string NumberNotGreaterThanZero = @"{0} must be a value greater than 0.";
        public const string FunctionalityNotSupported = @"This functionality is only supported in MySQL {0} and higher.";
        public const string MandatoryFieldNotFound = @"Field '{0}' is mandatory.";
        public const string UnexpectedField = @"Field name '{0}' is not allowed.";
        public const string InvalidFieldType = @"Field type with name '{0}' not found.";
        public const string InvalidIndexType = @"Index type with name '{0}' not found.";
        public const string AuthenticationFailed = @"Authentication failed using MYSQL41 and SHA256_MEMORY. Check the user name and password or try using a secure connection.";
        public const string FeatureNotSupported = @"This feature is currently not supported.";
        public const string InvalidJsonDocument = @"The value provided is not a valid JSON document. {0}";
        public const string InvalidConnectionTimeoutValue = @"The connection timeout value must be a positive integer (including 0).";
        public const string TimeOutMultipleHost = @"All server connection attempts were aborted. Timeout of {0} milliseconds was exceeded for each selected server.";
        public const string TimeOutSingleHost = @"Connection attempt to the server was aborted. Timeout of {0} milliseconds was exceeded.";
        public const string TimeOutMultipleHost0ms = @"All server connection attempts were aborted. Timeout was exceeded for each selected server.";
        public const string TimeOutSingleHost0ms = @"Connection attempt to the server was aborted. Timeout was exceeded.";
        public const string ClientOptionInvalidValue = @"Client option '{0}' does not support value '{1}'.";
        public const string ClientOptionNotValid = @"Client option '{0}' is not recognized as valid.";
        public const string PoolingQueueTimeout = @"Queue timeout expired. The timeout period elapsed prior to getting a session from the pool.";
        public const string InvalidSession = @"Session state is not valid.";
        public const string UnableToOpenSession = @"Unable to open a session.";
        public const string ClientIsClosed = @"You can't get more sessions because Client is closed.";
        public const string CollectionTableDoesNotExist = @"{0} '{1}' does not exist in schema '{2}'.";
        public const string DuplicateUserDefinedAttribute = @"Duplicate key '{0}' used in ""connection-attributes"".";
        public const string InvalidUserDefinedAttribute = @"Key names in ""connection-attributes"" cannot start with ""_"".";
        public const string InvalidConnectionAttributes = @"The value of ""connection-attributes"" must be either a boolean or a list of key-value pairs.";
        public const string EmptyKeyConnectionAttribute = @"Key name in connection attribute cannot be an empty string.";
        public const string DnsSrvInvalidScheme = @"Scheme '{0}' is not valid.";
        public const string DnsSrvConflictingOptions = @"'{0}' cannot be set to false with DNS SRV lookup enabled.";
    }
}
